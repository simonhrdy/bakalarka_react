{"ast":null,"code":"var _jsxFileName = \"/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Match/MatchDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport Breadcrumbs from \"../../components/Breadcrumbs\";\nimport MatchResultPanel from \"../../components/matchDetail/matchResultPanel\";\nimport MatchControlPanel from \"../../components/matchDetail/matchControlPanel\";\nimport { useEffect, useState } from \"react\";\nimport { getGameById } from \"../../Repositories/GameRepository\";\nimport { getFavoriteTeams } from \"../../Repositories/UserRepository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MatchDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [breadcrumbSport, setBreadcrumbSport] = useState(\"\");\n  const [breadcrumbLeague, setBreadcrumbLeague] = useState(\"\");\n  const [sportHref, setSportHref] = useState(\"/\");\n  const [leagueHref, setLeagueHref] = useState(\"/\");\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [favoriteTeams, setFavoriteTeams] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        let gameData = await getGameById(id);\n        let favoriteTeams = await getFavoriteTeams();\n        setBreadcrumbSport(gameData.sport.name);\n        setBreadcrumbLeague(gameData.league.name);\n        setSportHref(`/${gameData.sport.url}`);\n        setLeagueHref(`/league/${gameData.league.id}`);\n        setData(gameData);\n        setFavoriteTeams(favoriteTeams);\n      } catch (error) {\n        console.error(\"Chyba při načítání dat:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData().then(r => console.log(\"Data načtena\"));\n  }, [id]);\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        sport: breadcrumbSport,\n        sportHref: sportHref,\n        league: breadcrumbLeague,\n        leagueHref: leagueHref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MatchResultPanel, {\n        favoriteTeams: favoriteTeams,\n        setFavoriteTeams: setFavoriteTeams,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MatchControlPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n}\n_s(MatchDetail, \"+Uczg8qPiqe/78kZy4ujC0ewjT0=\", false, function () {\n  return [useParams];\n});\n_c = MatchDetail;\nvar _c;\n$RefreshReg$(_c, \"MatchDetail\");","map":{"version":3,"names":["useParams","Breadcrumbs","MatchResultPanel","MatchControlPanel","useEffect","useState","getGameById","getFavoriteTeams","jsxDEV","_jsxDEV","MatchDetail","_s","id","breadcrumbSport","setBreadcrumbSport","breadcrumbLeague","setBreadcrumbLeague","sportHref","setSportHref","leagueHref","setLeagueHref","data","setData","loading","setLoading","favoriteTeams","setFavoriteTeams","activeTab","setActiveTab","fetchData","gameData","sport","name","league","url","error","console","then","r","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Match/MatchDetail.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport Breadcrumbs from \"../../components/Breadcrumbs\";\nimport MatchResultPanel from \"../../components/matchDetail/matchResultPanel\";\nimport MatchControlPanel from \"../../components/matchDetail/matchControlPanel\";\nimport { useEffect, useState } from \"react\";\nimport { getGameById } from \"../../Repositories/GameRepository\";\nimport {getFavoriteTeams} from \"../../Repositories/UserRepository\";\n\nexport default function MatchDetail() {\n    const { id } = useParams();\n    const [breadcrumbSport, setBreadcrumbSport] = useState(\"\");\n    const [breadcrumbLeague, setBreadcrumbLeague] = useState(\"\");\n    const [sportHref, setSportHref] = useState(\"/\");\n    const [leagueHref, setLeagueHref] = useState(\"/\");\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [favoriteTeams, setFavoriteTeams] = useState([]);\n    const [activeTab, setActiveTab] = useState(\"overview\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                let gameData = await getGameById(id);\n               let favoriteTeams = await getFavoriteTeams();\n                setBreadcrumbSport(gameData.sport.name);\n                setBreadcrumbLeague(gameData.league.name);\n                setSportHref(`/${gameData.sport.url}`);\n                setLeagueHref(`/league/${gameData.league.id}`);\n                setData(gameData);\n                setFavoriteTeams(favoriteTeams);\n            } catch (error) {\n                console.error(\"Chyba při načítání dat:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData().then(r => console.log(\"Data načtena\"));\n    }, [id]);\n\n    if (!loading) {\n    return (\n        <div>\n            <Breadcrumbs sport={breadcrumbSport} sportHref={sportHref} league={breadcrumbLeague} leagueHref={leagueHref} />\n            <MatchResultPanel favoriteTeams={favoriteTeams} setFavoriteTeams={setFavoriteTeams} data={data} />\n            <MatchControlPanel />\n        </div>\n    );\n\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}