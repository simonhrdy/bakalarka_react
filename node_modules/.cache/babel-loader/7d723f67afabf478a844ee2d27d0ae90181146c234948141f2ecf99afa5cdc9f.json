{"ast":null,"code":"import apiService from '../Services/ApiService';\nimport GameDto from '../DTOs/GameDto';\nexport async function getAllGames(date, sport) {\n  try {\n    let dateOfDay = date !== null && date !== void 0 ? date : new Date().toISOString().split(\"T\")[0];\n    const url = `/game/date/${dateOfDay}/${sport}`;\n    const response = await apiService.get(url);\n    if (response) {\n      return await Promise.all(response.map(async game => new GameDto(game)));\n    }\n    return [];\n  } catch (error) {\n    console.error(\"Chyba při načítání her:\", error);\n    return [];\n  }\n}\nexport async function getGameById(id) {\n  try {\n    const url = `/game/${id}`;\n    const response = await apiService.get(url);\n    if (response) {\n      return new GameDto(response);\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Chyba při načítání her:\", error);\n    return null;\n  }\n}\nexport async function getGameAnalysis(id) {\n  try {\n    return apiService.get(`/game/${id}/getAnalysis`);\n  } catch (error) {\n    if (error.response.status === 404) {\n      return [];\n    }\n    throw error;\n  }\n}\nexport async function getGameBetting(id) {\n  try {\n    return apiService.get(`/game/${id}/getBetting`);\n  } catch (error) {\n    if (error.response.status === 404) {\n      return [];\n    }\n    throw error;\n  }\n}\nexport async function getGameLineup(id) {\n  try {\n    return apiService.get(`/game/${id}/getLineup`);\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      console.warn(\"Neautorizovaný přístup, vracím prázdné pole.\");\n      return [];\n    }\n    console.error(\"Chyba při aktualizaci uživatele:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["apiService","GameDto","getAllGames","date","sport","dateOfDay","Date","toISOString","split","url","response","get","Promise","all","map","game","error","console","getGameById","id","getGameAnalysis","status","getGameBetting","getGameLineup","warn"],"sources":["/Users/simonhrdy/Desktop/bakalarka/web/src/Repositories/GameRepository.js"],"sourcesContent":["import apiService from '../Services/ApiService';\nimport GameDto from '../DTOs/GameDto';\n\nexport async function getAllGames(date, sport) {\n    try {\n        let dateOfDay = date ?? new Date().toISOString().split(\"T\")[0];\n        const url = `/game/date/${dateOfDay}/${sport}`;\n        const response = await apiService.get(url);\n        if (response) {\n            return await Promise.all(response.map(async (game) => new GameDto(game)));\n        }\n        return [];\n    } catch (error) {\n        console.error(\"Chyba při načítání her:\", error);\n        return [];\n    }\n}\n\nexport async function getGameById(id) {\n    try {\n        const url = `/game/${id}`;\n        const response = await apiService.get(url);\n        if (response) {\n            return new GameDto(response);\n        }\n        return null;\n    } catch (error) {\n        console.error(\"Chyba při načítání her:\", error);\n        return null;\n    }\n}\n\nexport async function getGameAnalysis(id) {\n    try {\n        return apiService.get(`/game/${id}/getAnalysis`);\n    } catch (error) {\n        if (error.response.status === 404) {\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getGameBetting(id) {\n    try {\n        return apiService.get(`/game/${id}/getBetting`);\n    } catch (error) {\n        if (error.response.status === 404) {\n            return [];\n        }\n        throw error;\n    }\n}\n\n\nexport async function getGameLineup(id) {\n    try {\n        return apiService.get(`/game/${id}/getLineup`);\n    } catch (error) {\n        if (error.response && error.response.status === 401) {\n            console.warn(\"Neautorizovaný přístup, vracím prázdné pole.\");\n            return [];\n        }\n        console.error(\"Chyba při aktualizaci uživatele:\", error);\n        throw error;\n    }\n}\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,OAAO,MAAM,iBAAiB;AAErC,OAAO,eAAeC,WAAWA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC3C,IAAI;IACA,IAAIC,SAAS,GAAGF,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,IAAIG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,MAAMC,GAAG,GAAI,cAAaJ,SAAU,IAAGD,KAAM,EAAC;IAC9C,MAAMM,QAAQ,GAAG,MAAMV,UAAU,CAACW,GAAG,CAACF,GAAG,CAAC;IAC1C,IAAIC,QAAQ,EAAE;MACV,OAAO,MAAME,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,GAAG,CAAC,MAAOC,IAAI,IAAK,IAAId,OAAO,CAACc,IAAI,CAAC,CAAC,CAAC;IAC7E;IACA,OAAO,EAAE;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACb;AACJ;AAEA,OAAO,eAAeE,WAAWA,CAACC,EAAE,EAAE;EAClC,IAAI;IACA,MAAMV,GAAG,GAAI,SAAQU,EAAG,EAAC;IACzB,MAAMT,QAAQ,GAAG,MAAMV,UAAU,CAACW,GAAG,CAACF,GAAG,CAAC;IAC1C,IAAIC,QAAQ,EAAE;MACV,OAAO,IAAIT,OAAO,CAACS,QAAQ,CAAC;IAChC;IACA,OAAO,IAAI;EACf,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACf;AACJ;AAEA,OAAO,eAAeI,eAAeA,CAACD,EAAE,EAAE;EACtC,IAAI;IACA,OAAOnB,UAAU,CAACW,GAAG,CAAE,SAAQQ,EAAG,cAAa,CAAC;EACpD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACN,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;MAC/B,OAAO,EAAE;IACb;IACA,MAAML,KAAK;EACf;AACJ;AAEA,OAAO,eAAeM,cAAcA,CAACH,EAAE,EAAE;EACrC,IAAI;IACA,OAAOnB,UAAU,CAACW,GAAG,CAAE,SAAQQ,EAAG,aAAY,CAAC;EACnD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACN,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;MAC/B,OAAO,EAAE;IACb;IACA,MAAML,KAAK;EACf;AACJ;AAGA,OAAO,eAAeO,aAAaA,CAACJ,EAAE,EAAE;EACpC,IAAI;IACA,OAAOnB,UAAU,CAACW,GAAG,CAAE,SAAQQ,EAAG,YAAW,CAAC;EAClD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;MACjDJ,OAAO,CAACO,IAAI,CAAC,8CAA8C,CAAC;MAC5D,OAAO,EAAE;IACb;IACAP,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}