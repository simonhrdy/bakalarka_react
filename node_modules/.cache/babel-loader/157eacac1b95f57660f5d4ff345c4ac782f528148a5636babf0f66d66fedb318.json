{"ast":null,"code":"var _jsxFileName = \"/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Team/ContentTeam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MatchPanel from \"../../components/matchPanel\";\nimport Match from \"../../components/match\";\nimport PanelBlock from \"../../components/PanelBlock\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { getTeamResults, getTeamSchedule } from \"../../Repositories/TeamRepository\";\nimport { useParams } from \"react-router-dom\";\nimport { formatDate } from \"../../Services/Validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContentTeam({\n  type,\n  data,\n  id\n}) {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [teamData, setTeamData] = useState([]);\n  useEffect(() => {\n    setIsLoaded(false);\n    if (type === \"results\") {\n      getTeamResults(id).then(results => {\n        setTeamData(results);\n        setIsLoaded(true);\n      });\n    } else if (type === \"program\") {\n      getTeamSchedule(id).then(schedule => {\n        setTeamData(schedule);\n        setIsLoaded(true);\n      });\n    } else {\n      setIsLoaded(true);\n    }\n  }, [type, id]);\n  const groupedPlayers = data.players.reduce((acc, player) => {\n    if (!acc[player.position]) {\n      acc[player.position] = [];\n    }\n    acc[player.position].push(player);\n    return acc;\n  }, {});\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Na\\u010D\\xEDt\\xE1m data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lg:px-20 py-10\",\n    children: [type === \"results\" && /*#__PURE__*/_jsxDEV(MatchPanel, {\n      headline: \"V\\xFDsledky\",\n      children: teamData.map(match => /*#__PURE__*/_jsxDEV(Match, {\n        time: formatDate(data.date_of_game),\n        ...match\n      }, match.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), type === \"program\" && /*#__PURE__*/_jsxDEV(MatchPanel, {\n      headline: \"Program z\\xE1pas\\u016F\",\n      children: teamData.map(match => /*#__PURE__*/_jsxDEV(Match, {\n        ...match\n      }, match.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), type === \"lineUp\" && /*#__PURE__*/_jsxDEV(MatchPanel, {\n      headline: \"Soupiska t\\xFDm\\u016F\",\n      children: Object.entries(groupedPlayers).map(([position, players]) => /*#__PURE__*/_jsxDEV(PanelBlock, {\n        position: position,\n        players: players\n      }, position, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(ContentTeam, \"yBm6YMsaexBFNhbeEG25xJLID/8=\");\n_c = ContentTeam;\nvar _c;\n$RefreshReg$(_c, \"ContentTeam\");","map":{"version":3,"names":["React","useEffect","useState","MatchPanel","Match","PanelBlock","LoadingSpinner","getTeamResults","getTeamSchedule","useParams","formatDate","jsxDEV","_jsxDEV","ContentTeam","type","data","id","_s","isLoaded","setIsLoaded","teamData","setTeamData","then","results","schedule","groupedPlayers","players","reduce","acc","player","position","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","headline","map","match","time","date_of_game","Object","entries","_c","$RefreshReg$"],"sources":["/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Team/ContentTeam.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MatchPanel from \"../../components/matchPanel\";\nimport Match from \"../../components/match\";\nimport PanelBlock from \"../../components/PanelBlock\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport {getTeamResults, getTeamSchedule} from \"../../Repositories/TeamRepository\";\nimport {useParams} from \"react-router-dom\";\nimport {formatDate} from \"../../Services/Validator\";\n\nexport default function ContentTeam({ type, data, id }) {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [teamData, setTeamData] = useState([]);\n\n    useEffect(() => {\n        setIsLoaded(false);\n        if (type === \"results\") {\n            getTeamResults(id).then((results) => {\n                setTeamData(results);\n                setIsLoaded(true);\n            });\n        } else if (type === \"program\") {\n            getTeamSchedule(id).then((schedule) => {\n                setTeamData(schedule);\n                setIsLoaded(true);\n            });\n        } else {\n            setIsLoaded(true);\n        }\n    }, [type, id]);\n\n    const groupedPlayers = data.players.reduce((acc, player) => {\n        if (!acc[player.position]) {\n            acc[player.position] = [];\n        }\n        acc[player.position].push(player);\n        return acc;\n    }, {});\n\n    if (!isLoaded) {\n        return (\n            <LoadingSpinner>\n                <p>Načítám data...</p>\n            </LoadingSpinner>\n        );\n    }\n\n    return (\n        <div className=\"lg:px-20 py-10\">\n            {type === \"results\" && (\n                <MatchPanel headline=\"Výsledky\">\n                    {teamData.map((match) => (\n                        <Match key={match.id} time={formatDate(data.date_of_game)} {...match} />\n                    ))}\n                </MatchPanel>\n            )}\n            {type === \"program\" && (\n                <MatchPanel headline=\"Program zápasů\">\n                    {teamData.map((match) => (\n                        <Match key={match.id} {...match} />\n                    ))}\n                </MatchPanel>\n            )}\n            {type === \"lineUp\" && (\n                <MatchPanel headline=\"Soupiska týmů\">\n                    {Object.entries(groupedPlayers).map(([position, players]) => (\n                        <PanelBlock key={position} position={position} players={players} />\n                    ))}\n                </MatchPanel>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}