{"ast":null,"code":"export const checkTokenExpiration = () => {\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (!token || !user) {\n    return;\n  }\n  const tokenExp = JSON.parse(atob(token.split('.')[1])).exp;\n  const currentTime = Math.floor(Date.now() / 1000);\n  if (tokenExp < currentTime) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.reload();\n  }\n};","map":{"version":3,"names":["checkTokenExpiration","token","localStorage","getItem","user","JSON","parse","tokenExp","atob","split","exp","currentTime","Math","floor","Date","now","removeItem","window","location","reload"],"sources":["/Users/simonhrdy/Desktop/bakalarka/web/src/Services/TokenService.js"],"sourcesContent":["export const checkTokenExpiration = () => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (!token || !user) {\n        return;\n    }\n\n    const tokenExp = JSON.parse(atob(token.split('.')[1])).exp;\n    const currentTime = Math.floor(Date.now() / 1000);\n\n    if (tokenExp < currentTime) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.reload();\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;EACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErD,IAAI,CAACF,KAAK,IAAI,CAACG,IAAI,EAAE;IACjB;EACJ;EAEA,MAAMG,QAAQ,GAAGF,IAAI,CAACC,KAAK,CAACE,IAAI,CAACP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG;EAC1D,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EAEjD,IAAIR,QAAQ,GAAGI,WAAW,EAAE;IACxBT,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChCd,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC5B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}