{"ast":null,"code":"var _jsxFileName = \"/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Player/ContentPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MatchPanel from \"../../components/matchPanel\";\nimport Match from \"../../components/match\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { formatDate } from \"../../Services/Validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContentPlayer(props) {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(true);\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Na\\u010D\\xEDt\\xE1m data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n  const matches = props.data || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lg:px-20 py-10\",\n    children: /*#__PURE__*/_jsxDEV(MatchPanel, {\n      headline: \"Posledn\\xED odhran\\xE9 z\\xE1pasy\",\n      children: matches.map(match => {\n        var _match$game$parametrs, _match$game$parametrs2;\n        return /*#__PURE__*/_jsxDEV(Match, {\n          time: formatDate(match.game.date_of_game),\n          team1: match.game.home_team_id.name,\n          team1Img: match.game.home_team_id.image_src,\n          team2: match.game.away_team_id.name,\n          team2Img: match.game.away_team_id.image_src,\n          score1: (_match$game$parametrs = match.game.parametrs) === null || _match$game$parametrs === void 0 ? void 0 : _match$game$parametrs.goals_home,\n          score2: (_match$game$parametrs2 = match.game.parametrs) === null || _match$game$parametrs2 === void 0 ? void 0 : _match$game$parametrs2.goals_away,\n          id: match.id\n        }, match.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(ContentPlayer, \"rghfZOAcWRMXS0vY2ff9+tyYTSY=\");\n_c = ContentPlayer;\nvar _c;\n$RefreshReg$(_c, \"ContentPlayer\");","map":{"version":3,"names":["React","useState","MatchPanel","Match","LoadingSpinner","formatDate","jsxDEV","_jsxDEV","ContentPlayer","props","_s","isLoaded","setIsLoaded","children","fileName","_jsxFileName","lineNumber","columnNumber","matches","data","className","headline","map","match","_match$game$parametrs","_match$game$parametrs2","time","game","date_of_game","team1","home_team_id","name","team1Img","image_src","team2","away_team_id","team2Img","score1","parametrs","goals_home","score2","goals_away","id","_c","$RefreshReg$"],"sources":["/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Player/ContentPlayer.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport MatchPanel from \"../../components/matchPanel\";\nimport Match from \"../../components/match\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport {formatDate} from \"../../Services/Validator\";\n\nexport default function ContentPlayer(props) {\n    const [isLoaded, setIsLoaded] = useState(true);\n\n    if (!isLoaded) {\n        return (\n            <LoadingSpinner>\n                <p>Načítám data...</p>\n            </LoadingSpinner>\n        );\n    }\n\n    const matches = props.data || [];\n\n    return (\n        <div className=\"lg:px-20 py-10\">\n            <MatchPanel headline=\"Poslední odhrané zápasy\">\n                {matches.map((match) => (\n                    <Match\n                        key={match.id}\n                        time={formatDate(match.game.date_of_game)}\n                        team1={match.game.home_team_id.name}\n                        team1Img={match.game.home_team_id.image_src}\n                        team2={match.game.away_team_id.name}\n                        team2Img={match.game.away_team_id.image_src}\n                        score1={match.game.parametrs?.goals_home}\n                        score2={match.game.parametrs?.goals_away}\n                        id={match.id}\n                    />\n                ))}\n            </MatchPanel>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,SAAQC,UAAU,QAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,IAAI,CAACU,QAAQ,EAAE;IACX,oBACIJ,OAAA,CAACH,cAAc;MAAAS,QAAA,eACXN,OAAA;QAAAM,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEzB;EAEA,MAAMC,OAAO,GAAGT,KAAK,CAACU,IAAI,IAAI,EAAE;EAEhC,oBACIZ,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAP,QAAA,eAC3BN,OAAA,CAACL,UAAU;MAACmB,QAAQ,EAAC,kCAAyB;MAAAR,QAAA,EACzCK,OAAO,CAACI,GAAG,CAAEC,KAAK;QAAA,IAAAC,qBAAA,EAAAC,sBAAA;QAAA,oBACflB,OAAA,CAACJ,KAAK;UAEFuB,IAAI,EAAErB,UAAU,CAACkB,KAAK,CAACI,IAAI,CAACC,YAAY,CAAE;UAC1CC,KAAK,EAAEN,KAAK,CAACI,IAAI,CAACG,YAAY,CAACC,IAAK;UACpCC,QAAQ,EAAET,KAAK,CAACI,IAAI,CAACG,YAAY,CAACG,SAAU;UAC5CC,KAAK,EAAEX,KAAK,CAACI,IAAI,CAACQ,YAAY,CAACJ,IAAK;UACpCK,QAAQ,EAAEb,KAAK,CAACI,IAAI,CAACQ,YAAY,CAACF,SAAU;UAC5CI,MAAM,GAAAb,qBAAA,GAAED,KAAK,CAACI,IAAI,CAACW,SAAS,cAAAd,qBAAA,uBAApBA,qBAAA,CAAsBe,UAAW;UACzCC,MAAM,GAAAf,sBAAA,GAAEF,KAAK,CAACI,IAAI,CAACW,SAAS,cAAAb,sBAAA,uBAApBA,sBAAA,CAAsBgB,UAAW;UACzCC,EAAE,EAAEnB,KAAK,CAACmB;QAAG,GARRnB,KAAK,CAACmB,EAAE;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAShB,CAAC;MAAA,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd;AAACP,EAAA,CAhCuBF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}