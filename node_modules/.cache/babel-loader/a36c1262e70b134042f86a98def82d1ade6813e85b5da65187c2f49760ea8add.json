{"ast":null,"code":"var _jsxFileName = \"/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Match/matchDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport Breadcrumbs from \"../../components/breadcrumbs\";\nimport MatchResultPanel from \"../../components/matchDetail/matchResultPanel\";\nimport MatchControlPanel from \"../../components/matchDetail/matchControlPanel\";\nimport { useEffect, useState } from \"react\";\nimport { getGameById } from \"../../Repositories/GameRepository\";\nimport UserLocalStorage from \"../../Auth/userAuth\";\nimport { getFavoriteTeams } from \"../../Repositories/UserRepository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MatchDetail() {\n  _s();\n  let {\n    id\n  } = useParams();\n  let [breadcrumbSport, setBreadcrumbSport] = useState(\"\");\n  let [breadcrumbLeague, setBreadcrumbLeague] = useState(\"\");\n  let [sportHref, setSportHref] = useState(\"/\");\n  let [leagueHref, setLeagueHref] = useState(\"/\");\n  let [data, setData] = useState(null); // Inicializujeme jako null\n  let [loading, setLoading] = useState(true); // Přidáme stav pro načítání\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        let gameData = await getGameById(id);\n        let favoriteTeams = await getFavoriteTeams();\n        setBreadcrumbSport(gameData.sport.name);\n        setBreadcrumbLeague(gameData.league.name);\n        setSportHref(`/${gameData.sport.url}`);\n        setLeagueHref(`/league/${gameData.league.id}`);\n        setData(gameData);\n      } catch (error) {\n        console.error(\"Chyba při načítání dat:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData().then(r => console.log(\"Data načtena\"));\n  }, [id]);\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        sport: breadcrumbSport,\n        sportHref: sportHref,\n        league: breadcrumbLeague,\n        leagueHref: leagueHref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MatchResultPanel, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MatchControlPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n}\n_s(MatchDetail, \"A4simQS3hPgmT4902Xmlqlpreo4=\", false, function () {\n  return [useParams];\n});\n_c = MatchDetail;\nvar _c;\n$RefreshReg$(_c, \"MatchDetail\");","map":{"version":3,"names":["useParams","Breadcrumbs","MatchResultPanel","MatchControlPanel","useEffect","useState","getGameById","UserLocalStorage","getFavoriteTeams","jsxDEV","_jsxDEV","MatchDetail","_s","id","breadcrumbSport","setBreadcrumbSport","breadcrumbLeague","setBreadcrumbLeague","sportHref","setSportHref","leagueHref","setLeagueHref","data","setData","loading","setLoading","fetchData","gameData","favoriteTeams","sport","name","league","url","error","console","then","r","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Match/matchDetail.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport Breadcrumbs from \"../../components/breadcrumbs\";\nimport MatchResultPanel from \"../../components/matchDetail/matchResultPanel\";\nimport MatchControlPanel from \"../../components/matchDetail/matchControlPanel\";\nimport { useEffect, useState } from \"react\";\nimport { getGameById } from \"../../Repositories/GameRepository\";\nimport UserLocalStorage from \"../../Auth/userAuth\";\nimport {getFavoriteTeams} from \"../../Repositories/UserRepository\";\n\nexport default function MatchDetail() {\n    let { id } = useParams();\n    let [breadcrumbSport, setBreadcrumbSport] = useState(\"\");\n    let [breadcrumbLeague, setBreadcrumbLeague] = useState(\"\");\n    let [sportHref, setSportHref] = useState(\"/\");\n    let [leagueHref, setLeagueHref] = useState(\"/\");\n    let [data, setData] = useState(null); // Inicializujeme jako null\n    let [loading, setLoading] = useState(true); // Přidáme stav pro načítání\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                let gameData = await getGameById(id);\n                let favoriteTeams = await getFavoriteTeams();\n                setBreadcrumbSport(gameData.sport.name);\n                setBreadcrumbLeague(gameData.league.name);\n                setSportHref(`/${gameData.sport.url}`);\n                setLeagueHref(`/league/${gameData.league.id}`);\n                setData(gameData);\n            } catch (error) {\n                console.error(\"Chyba při načítání dat:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData().then(r => console.log(\"Data načtena\"));\n    }, [id]);\n\n    if (!loading) {\n    return (\n        <div>\n            <Breadcrumbs sport={breadcrumbSport} sportHref={sportHref} league={breadcrumbLeague} leagueHref={leagueHref} />\n            <MatchResultPanel data={data} />\n            <MatchControlPanel />\n        </div>\n    );\n\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}