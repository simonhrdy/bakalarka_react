{"ast":null,"code":"var _jsxFileName = \"/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Player/ContentPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MatchPanel from \"../../components/matchPanel\";\nimport Match from \"../../components/match\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContentPlayer({\n  data\n}) {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(true);\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Na\\u010D\\xEDt\\xE1m data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lg:px-20 py-10\",\n    children: /*#__PURE__*/_jsxDEV(MatchPanel, {\n      headline: \"V\\xFDsledky\",\n      children: data.data.map(match => {\n        const game = match.game;\n        const dateObj = new Date(game.date_of_game);\n        const date = dateObj.toLocaleDateString();\n        const time = dateObj.toLocaleTimeString();\n        return /*#__PURE__*/_jsxDEV(Match, {\n          time: `${date} ${time}`,\n          team1: game.home_team_id.name,\n          team1Img: game.home_team_id.image_src,\n          team2: game.away_team_id.name,\n          team2Img: game.away_team_id.image_src,\n          score1: game.parametrs ? game.parametrs.goals_home : \"-\",\n          score2: game.parametrs ? game.parametrs.goals_away : \"-\",\n          id: match.id\n        }, match.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(ContentPlayer, \"rghfZOAcWRMXS0vY2ff9+tyYTSY=\");\n_c = ContentPlayer;\nvar _c;\n$RefreshReg$(_c, \"ContentPlayer\");","map":{"version":3,"names":["React","useState","MatchPanel","Match","LoadingSpinner","jsxDEV","_jsxDEV","ContentPlayer","data","_s","isLoaded","setIsLoaded","children","fileName","_jsxFileName","lineNumber","columnNumber","className","headline","map","match","game","dateObj","Date","date_of_game","date","toLocaleDateString","time","toLocaleTimeString","team1","home_team_id","name","team1Img","image_src","team2","away_team_id","team2Img","score1","parametrs","goals_home","score2","goals_away","id","_c","$RefreshReg$"],"sources":["/Users/simonhrdy/Desktop/bakalarka/web/src/layout/Player/ContentPlayer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport MatchPanel from \"../../components/matchPanel\";\nimport Match from \"../../components/match\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\n\nexport default function ContentPlayer({ data }) {\n    const [isLoaded, setIsLoaded] = useState(true);\n\n    if (!isLoaded) {\n        return (\n            <LoadingSpinner>\n                <p>Načítám data...</p>\n            </LoadingSpinner>\n        );\n    }\n\n    return (\n        <div className=\"lg:px-20 py-10\">\n            <MatchPanel headline=\"Výsledky\">\n                {data.data.map((match) => {\n                    const game = match.game;\n                    const dateObj = new Date(game.date_of_game);\n                    const date = dateObj.toLocaleDateString();\n                    const time = dateObj.toLocaleTimeString();\n\n                    return (\n                        <Match\n                            key={match.id}\n                            time={`${date} ${time}`}\n                            team1={game.home_team_id.name}\n                            team1Img={game.home_team_id.image_src}\n                            team2={game.away_team_id.name}\n                            team2Img={game.away_team_id.image_src}\n                            score1={game.parametrs ? game.parametrs.goals_home : \"-\"}\n                            score2={game.parametrs ? game.parametrs.goals_away : \"-\"}\n                            id={match.id}\n                        />\n                    );\n                })}\n            </MatchPanel>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,aAAaA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9C,IAAI,CAACS,QAAQ,EAAE;IACX,oBACIJ,OAAA,CAACF,cAAc;MAAAQ,QAAA,eACXN,OAAA;QAAAM,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEzB;EAEA,oBACIV,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAL,QAAA,eAC3BN,OAAA,CAACJ,UAAU;MAACgB,QAAQ,EAAC,aAAU;MAAAN,QAAA,EAC1BJ,IAAI,CAACA,IAAI,CAACW,GAAG,CAAEC,KAAK,IAAK;QACtB,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;QACvB,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,YAAY,CAAC;QAC3C,MAAMC,IAAI,GAAGH,OAAO,CAACI,kBAAkB,CAAC,CAAC;QACzC,MAAMC,IAAI,GAAGL,OAAO,CAACM,kBAAkB,CAAC,CAAC;QAEzC,oBACItB,OAAA,CAACH,KAAK;UAEFwB,IAAI,EAAG,GAAEF,IAAK,IAAGE,IAAK,EAAE;UACxBE,KAAK,EAAER,IAAI,CAACS,YAAY,CAACC,IAAK;UAC9BC,QAAQ,EAAEX,IAAI,CAACS,YAAY,CAACG,SAAU;UACtCC,KAAK,EAAEb,IAAI,CAACc,YAAY,CAACJ,IAAK;UAC9BK,QAAQ,EAAEf,IAAI,CAACc,YAAY,CAACF,SAAU;UACtCI,MAAM,EAAEhB,IAAI,CAACiB,SAAS,GAAGjB,IAAI,CAACiB,SAAS,CAACC,UAAU,GAAG,GAAI;UACzDC,MAAM,EAAEnB,IAAI,CAACiB,SAAS,GAAGjB,IAAI,CAACiB,SAAS,CAACG,UAAU,GAAG,GAAI;UACzDC,EAAE,EAAEtB,KAAK,CAACsB;QAAG,GARRtB,KAAK,CAACsB,EAAE;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAShB,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd;AAACP,EAAA,CArCuBF,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}