{"ast":null,"code":"import apiService from '../Services/ApiService';\nimport GameDto from '../DTOs/GameDto';\nexport async function getAllGames(date, sport) {\n  try {\n    let dateOfDay = date !== null && date !== void 0 ? date : new Date().toISOString().split(\"T\")[0];\n    const url = `/game/date/${dateOfDay}/${sport}`;\n    const response = await apiService.get(url);\n    if (response) {\n      return await Promise.all(response.map(async game => new GameDto(game)));\n    }\n    return [];\n  } catch (error) {\n    console.error(\"Chyba při načítání her:\", error);\n    return [];\n  }\n}\nexport async function getGameById(id) {\n  try {\n    const url = `/game/${id}`;\n    const response = await apiService.get(url);\n    if (response) {\n      return new GameDto(response);\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Chyba při načítání her:\", error);\n    return null;\n  }\n}\nexport async function getGameAnalytisc(id) {\n  try {\n    const url = `/game/${id}`;\n    const response = await apiService.get(url);\n    if (response) {\n      return new GameDto(response);\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Chyba při načítání her:\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["apiService","GameDto","getAllGames","date","sport","dateOfDay","Date","toISOString","split","url","response","get","Promise","all","map","game","error","console","getGameById","id","getGameAnalytisc"],"sources":["/Users/simonhrdy/Desktop/bakalarka/web/src/Repositories/GameRepository.js"],"sourcesContent":["import apiService from '../Services/ApiService';\nimport GameDto from '../DTOs/GameDto';\n\nexport async function getAllGames(date, sport) {\n    try {\n        let dateOfDay = date ?? new Date().toISOString().split(\"T\")[0];\n        const url = `/game/date/${dateOfDay}/${sport}`;\n        const response = await apiService.get(url);\n        if (response) {\n            return await Promise.all(response.map(async (game) => new GameDto(game)));\n        }\n        return [];\n    } catch (error) {\n        console.error(\"Chyba při načítání her:\", error);\n        return [];\n    }\n}\n\nexport async function getGameById(id) {\n    try {\n        const url = `/game/${id}`;\n        const response = await apiService.get(url);\n        if (response) {\n            return new GameDto(response);\n        }\n        return null;\n    } catch (error) {\n        console.error(\"Chyba při načítání her:\", error);\n        return null;\n    }\n}\n\n\nexport async function getGameAnalytisc(id) {\n    try {\n        const url = `/game/${id}`;\n        const response = await apiService.get(url);\n        if (response) {\n            return new GameDto(response);\n        }\n        return null;\n    } catch (error) {\n        console.error(\"Chyba při načítání her:\", error);\n        return null;\n    }\n}"],"mappings":"AAAA,OAAOA,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,OAAO,MAAM,iBAAiB;AAErC,OAAO,eAAeC,WAAWA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC3C,IAAI;IACA,IAAIC,SAAS,GAAGF,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,IAAIG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,MAAMC,GAAG,GAAI,cAAaJ,SAAU,IAAGD,KAAM,EAAC;IAC9C,MAAMM,QAAQ,GAAG,MAAMV,UAAU,CAACW,GAAG,CAACF,GAAG,CAAC;IAC1C,IAAIC,QAAQ,EAAE;MACV,OAAO,MAAME,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,GAAG,CAAC,MAAOC,IAAI,IAAK,IAAId,OAAO,CAACc,IAAI,CAAC,CAAC,CAAC;IAC7E;IACA,OAAO,EAAE;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACb;AACJ;AAEA,OAAO,eAAeE,WAAWA,CAACC,EAAE,EAAE;EAClC,IAAI;IACA,MAAMV,GAAG,GAAI,SAAQU,EAAG,EAAC;IACzB,MAAMT,QAAQ,GAAG,MAAMV,UAAU,CAACW,GAAG,CAACF,GAAG,CAAC;IAC1C,IAAIC,QAAQ,EAAE;MACV,OAAO,IAAIT,OAAO,CAACS,QAAQ,CAAC;IAChC;IACA,OAAO,IAAI;EACf,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACf;AACJ;AAGA,OAAO,eAAeI,gBAAgBA,CAACD,EAAE,EAAE;EACvC,IAAI;IACA,MAAMV,GAAG,GAAI,SAAQU,EAAG,EAAC;IACzB,MAAMT,QAAQ,GAAG,MAAMV,UAAU,CAACW,GAAG,CAACF,GAAG,CAAC;IAC1C,IAAIC,QAAQ,EAAE;MACV,OAAO,IAAIT,OAAO,CAACS,QAAQ,CAAC;IAChC;IACA,OAAO,IAAI;EACf,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}